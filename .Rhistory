n_porcion_azucar1<-as.numeric(porcion_azucar1)
kcal_totales_azucar1<- (n_kcal_alimento_dieta_azucar1*n_porcion_azucar1)/100
kcal_totales_azucar1
#Saca las proteinas
proteina_alimento_dieta_azucar1<-azucar[alimento_dieta_azucar1, "Proteínas"]
n_proteina_alimento_dieta_azucar1<- as.numeric(proteina_alimento_dieta_azucar1)
proteina_totales_azucar1<- (n_proteina_alimento_dieta_azucar1*n_porcion_azucar1)/100
#Saca los carbohidratos
carbohidratos_alimento_dieta_azucar1<- azucar[alimento_dieta_azucar1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_azucar1<-as.numeric(carbohidratos_alimento_dieta_azucar1)
carbohidratos_totales_azucar1<- (n_carbohidratos_alimento_dieta_azucar1*n_porcion_azucar1)/100
#Saca las grasas
grasa_alimento_dieta_azucar1<- azucar[alimento_dieta_azucar1, "Grasas"]
n_grasas_alimento_dieta_azucar1<- as.numeric(grasa_alimento_dieta_azucar1)
grasas_totales_azucar1<- (n_grasas_alimento_dieta_azucar1*n_porcion_azucar1)/100
azucar_1<- c(kcal_totales_azucar1, proteina_totales_azucar1, carbohidratos_totales_azucar1, grasas_totales_azucar1)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(azucar_1)<- nombres
return(print(azucar_1))
}else if (cantidad_azucar==2){
#Saca las kcal
alimento_dieta_azucar2.1<-readline(prompt = "Ingresa azucar 1: ")
kcal_alimento_dieta_azucar2.1<- azucar[alimento_dieta_azucar2.1, "kcal"]
n_kcal_alimento_dieta_azucar2.1<-as.numeric(kcal_alimento_dieta_azucar2.1)
porcion_azucar2.1<- readline(prompt = "Ingresa el peso en gr de azucar 1: ")
n_porcion_azucar2.1<-as.numeric(porcion_azucar2.1)
kcal_azucar2.1<- (n_kcal_alimento_dieta_azucar2.1*n_porcion_azucar2.1)/100
kcal_azucar2.1
alimento_dieta_azucar2.2<-readline(prompt = "Ingresa azucar 2: ")
kcal_alimento_dieta_azucar2.2<- azucar[alimento_dieta_azucar2.2, "kcal"]
n_kcal_alimento_dieta_azucar2.2<-as.numeric(kcal_alimento_dieta_azucar2.2)
porcion_azucar2.2<- readline(prompt = "Ingresa el peso en gr de azucar 2: ")
n_porcion_azucar2.2<-as.numeric(porcion_azucar2.2)
kcal_azucar2.2<- (n_kcal_alimento_dieta_azucar2.2*n_porcion_azucar2.2)/100
kcal_azucar2.2
kcal_totales_azucar2<- kcal_azucar2.1 + kcal_azucar2.2
#Saca las proteinas
proteina_alimento_dieta_azucar2.1<-azucar[alimento_dieta_azucar2.1, "Proteínas"]
n_proteina_alimento_dieta_azucar2.1<- as.numeric(proteina_alimento_dieta_azucar2.1)
n_proteina_azucar2.1<- (n_proteina_alimento_dieta_azucar2.1*n_porcion_azucar2.1)/100
proteina_alimento_dieta_azucar2.2<-azucar[alimento_dieta_azucar2.2, "Proteínas"]
n_proteina_alimento_dieta_azucar2.2<- as.numeric(proteina_alimento_dieta_azucar2.2)
n_proteina_azucar2.2<- (n_proteina_alimento_dieta_azucar2.2*n_porcion_azucar2.2)/100
proteina_totales_azucar2<- n_proteina_azucar2.1 + n_proteina_azucar2.2
#Saca los carbohidratos
carbohidratos_alimento_dieta_azucar2.1<- azucar[alimento_dieta_azucar2.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_azucar2.1<-as.numeric(carbohidratos_alimento_dieta_azucar2.1)
n_carbohidratos_azucar2.1<- (n_carbohidratos_alimento_dieta_azucar2.1*n_porcion_azucar2.1)/100
carbohidratos_alimento_dieta_azucar2.2<- azucar[alimento_dieta_azucar2.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_azucar2.2<-as.numeric(carbohidratos_alimento_dieta_azucar2.2)
n_carbohidratos_azucar2.2<- (n_carbohidratos_alimento_dieta_azucar2.2*n_porcion_azucar2.2)/100
carbohidratos_totales_azucar2<- n_carbohidratos_azucar2.1 + n_carbohidratos_azucar2.2
#Saca la grasa
grasa_alimento_dieta_azucar2.1<- azucar[alimento_dieta_azucar2.1, "Grasa"]
n_grasa_alimento_dieta_azucar2.1<- as.numeric(grasa_alimento_dieta_azucar2.1)
n_grasa_azucar2.1<- (n_grasa_alimento_dieta_azucar2.1*n_porcion_azucar2.1)/100
grasa_alimento_dieta_azucar2.2<- azucar[alimento_dieta_azucar2.2, "Grasa"]
n_grasa_alimento_dieta_azucar2.2<- as.numeric(grasa_alimento_dieta_azucar2.2)
n_grasa_azucar2.2<- (n_grasa_alimento_dieta_azucar2.2*n_porcion_azucar2.2)/100
grasa_totales_azucar2<- n_grasa_azucar2.1 + n_grasa_azucar2.2
azucar_1<- c(kcal_totales_azucar2, proteina_totales_azucar2, carbohidratos_totales_azucar2, grasa_totales_azucar2)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(azucar_1)<- nombres
return(print(azucar_1))
}
}
alimento_azucar<-prueba_azucar()
alimento_azucar
comidas_prueba<- data.frame(comidas= character(),
kcal = numeric(),
proteinas = numeric(),
carbohidratos = numeric(),
grasa = numeric())
comidas_prueba
Desayuno<-data.frame(comidas="Desayuno",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Desayuno<-data.frame(comidas="Desayuno",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
#Para llenarla lo voy a hacer por fila
Desayuno<-data.frame(comidas="Desayuno",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
#Para llenarla lo voy a hacer por fila
alimento_animal
#Para llenarla lo voy a hacer por fila
alimento_animal<- prueba_alimento()
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_animal
Desayuno<-data.frame(comidas="Desayuno",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Desayuno
#Inserto la fila con la función rbind
comidas_prueba<- rbind(comidas_prueba, Desayuno)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar<- prueba_azucar()
Colacion_1<-data.frame(comidas="Desayuno",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Colacion_1
comidas_prueba<- rbind(comidas_prueba, Colacion_1)
comidas_prueba
#Hago una tabla en blanco con data.frame.
#Una tabla equivale a un día
prueba_tabla<- function(){
comidas_prueba<- data.frame(comidas= character(),
kcal = numeric(),
proteinas = numeric(),
carbohidratos = numeric(),
grasa = numeric())
comidas_prueba
#Para llenarla lo voy a hacer por fila
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Desayuno<-data.frame(comidas="Desayuno",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Desayuno
#Inserto la fila con la función rbind
comidas_prueba<- rbind(comidas_prueba, Desayuno)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Colacion_1<-data.frame(comidas="Colación 1",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Colacion_1
comidas_prueba<- rbind(comidas_prueba, Colacion_1)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Comida<data.frame(comidas="Comida",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Comida
comidas_prueba<- rbind(comidas_prueba, Comida)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Colacion_2<-data.frame(comidas="Colación 2",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Colacion_2
comidas_prueba<- rbind(comidas_prueba, Colacion_2)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Cena<-data.frame(comidas="Cena",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Cena
comidas_prueba<- rbind(comidas_prueba, Cena)
comidas_prueba
}
prueba_tabla()
prueba_tabla()
>>>>>>> eed51449513252bc02734f91c47fb1d1be437b07
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
print (paste ("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", cantidad_calorias))
}
metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
return(print(cantidad_calorias))
}
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
texto_calorias<- readline("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias)
texto_calorias<- print(paste("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias))
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
}
division_calorias(calorias_diarias)
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
return(frutas_y_verduras)
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
}
division_calorias(calorias_diarias)
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
return(frutas_y_verduras)
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
}
division_calorias(calorias_diarias)
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
return(frutas_y_verduras)
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
return(proteinas_y_carbs)
}
division_calorias(calorias_diarias)
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
#####Mi duda aqui es si si es 665 y el del hombre 66????
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
return(cantidad_calorias)
}
######Corregí esto para que el valor de la función basal se ponga en un objeto y así lo podamos usar para otras cosas
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
texto_calorias<- print(paste("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias))
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
#####Mi duda aqui es si si es 665 y el del hombre 66????
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
return(cantidad_calorias)
}
######Corregí esto para que el valor de la función basal se ponga en un objeto y así lo podamos usar para otras cosas
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias
######Corregí esto para que el valor de la función basal se ponga en un objeto y así lo podamos usar para otras cosas
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
texto_calorias<- print(paste("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias))
calorias_diarias
