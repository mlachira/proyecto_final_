<<<<<<< HEAD
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Colacion_1<-data.frame(comidas="Colación 1",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Colacion_1
comidas_prueba<- rbind(comidas_prueba, Colacion_1)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Comida<data.frame(comidas="Comida",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Comida
comidas_prueba<- rbind(comidas_prueba, Comida)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Colacion_2<-data.frame(comidas="Colación 2",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Colacion_2
comidas_prueba<- rbind(comidas_prueba, Colacion_2)
comidas_prueba
alimento_animal<- prueba_alimentos()
alimento_animal
alimento_fruta<- prueba_fruta()
alimento_fruta
alimento_verdura<- prueba_verdura()
alimento_verdura
alimento_leguminosa<- prueba_leguminosa()
alimento_leguminosa
alimento_grasas_proteina<- pruebas_grasas_proteína()
alimento_grasas_proteina
alimento_grasas<- prueba_grasas()
alimento_grasas
alimento_azucar<- prueba_azucar()
alimento_azucar
Cena<-data.frame(comidas="Cena",
kcal= alimento_animal["kcal"] + alimento_fruta["kcal"] + alimento_verdura ["kcal"] + alimento_leguminosa ["kcal"] + alimento_grasas_proteina["kcal"] + alimento_grasas["kcal"] + alimento_azucar ["kcal"],
proteinas=alimento_animal["proteina"] + alimento_fruta["proteina"] + alimento_verdura ["proteina"] + alimento_leguminosa ["proteina"] + alimento_grasas_proteina["proteina"] + alimento_grasas["proteina"] + alimento_azucar ["proteina"],
carbohidratos=alimento_animal["carbohidratos"] + alimento_fruta["carbohidratos"] + alimento_verdura ["carbohidratos"] + alimento_leguminosa ["carbohidratos"] + alimento_grasas_proteina["carbohidratos"] + alimento_grasas["carbohidratos"] + alimento_azucar ["carbohidratos"],
grasa= alimento_animal["grasas"] + alimento_fruta["grasas"] + alimento_verdura["grasas"] + alimento_leguminosa["grasas"] + alimento_grasas_proteina["grasas"] + alimento_grasas["grasas"] + alimento_azucar["grasas"])
Cena
comidas_prueba<- rbind(comidas_prueba, Cena)
comidas_prueba
}
prueba_tabla()
prueba_tabla()
<<<<<<< Updated upstream
>>>>>>> eed51449513252bc02734f91c47fb1d1be437b07
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
=======
# ----- Obtencion de datos -----
# Los datos necesarios para el calculo de calorias recomendadas por dia
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usara "readline"
# Sexo ----
readline (prompt = "Ingresa tu sexo: ") # pide que especifiques tu sexo (hombre o mujer) en la consola
sexo <- readline (prompt = "Ingresa tu sexo: ") #asigna tu respuesta a un objeto llamado "sexo"
sexo
# Peso ----
readline (prompt = "Ingresa tu peso en kilogramos: ") # pide que especifiques tu peso (en kg) en la consola
readline (prompt = "Ingresa tu peso en kilogramos: ") # pide que especifiques tu peso (en kg) en la consola
# Creo que podemos borrar la linea de arriba porque ya se pone en la de abajo y por eso me pregunta dos veces lo mismo
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que esta en "peso_1" como un caracter numerico
peso
# Estatura ----
readline (prompt = "Ingresa tu estatura en centimetros: ") # pide que especifiques tu estatura (en cm) en la consola
# Creo que podemos borrar la linea de arriba porque ya se pone en la de abajo y por eso me pregunta dos veces lo mismo
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que esta en "estatura_1" como un caracter numerico
estatura
# Edad
readline (prompt = "Ingresa tu edad: ") # pide que especifiques tu edad en la consola
# Creo que podemos borrar la linea de arriba porque ya se pone en la de abajo y por eso me pregunta dos veces lo mismo
edad_1 <- readline (prompt = "Ingresa tu edad: ") #asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que esta en "edad_1" como un caracter numerico
edad
# Factor de actividad ----
# los niveles de actividad fisica pueden ser:
# sedentario (nada o poco ejercicio)
# poco (si realizas ejercicio de 1 a 3 veces por semana)
# moderado (si realizas ejercicio de 3 a 5 veces por semana)
# intenso (si realizas ejercicio de 6 a 7 veces por semana)
# profesional (si realizas entrenamientos de mas de 4 horas diarias)
factor_actividad <- function () {
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad fisica que realizas: ")
>>>>>>> Stashed changes
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
<<<<<<< Updated upstream
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
print (paste ("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", cantidad_calorias))
}
metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
=======
} else if (repuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else {
respuesta <- 1.9
}
}}
# Factor de actividad ----
# los niveles de actividad fisica pueden ser:
# sedentario (nada o poco ejercicio)
# poco (si realizas ejercicio de 1 a 3 veces por semana)
# moderado (si realizas ejercicio de 3 a 5 veces por semana)
# intenso (si realizas ejercicio de 6 a 7 veces por semana)
# profesional (si realizas entrenamientos de mas de 4 horas diarias)
factor_actividad <- function () {
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad fisica que realizas: ")
>>>>>>> Stashed changes
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
<<<<<<< Updated upstream
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
return(print(cantidad_calorias))
}
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
texto_calorias<- readline("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias)
texto_calorias<- print(paste("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias))
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
}
division_calorias(calorias_diarias)
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
return(frutas_y_verduras)
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
}
division_calorias(calorias_diarias)
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
return(frutas_y_verduras)
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
}
division_calorias(calorias_diarias)
#
# para fraccionar las calorías en cada grupo de alimentos de manera general:
division_calorias <- function(calorias_diarias){
print("A lo largo del día, entre comidas y colaciones, se recomienda que consumas...")
# frutas y verduras
frutas_y_verduras <- calorias_diarias/2 # se recomienda que 1/2 de los alimentos en una comida sea de frutas y verduras.
print (paste (frutas_y_verduras, "calorías de frutas y verduras,"))
return(frutas_y_verduras)
# proteínas y carbohidratos
proteinas_y_carbs <- calorias_diarias/4 # se recomienda que 1/4 de los alimentos en una comida sea de proteinas y otro 1/4 de carbohidratos.
print (paste (proteinas_y_carbs, "calorías de alimentos fuente de proteínas y"))
print (paste (proteinas_y_carbs, "calorías de carbohidratos."))
return(proteinas_y_carbs)
}
division_calorias(calorias_diarias)
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
=======
} else if (repuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else {
respuesta <- 1.9
}
}
factor_actividad
factor_actividad()
# Factor de actividad ----
# los niveles de actividad fisica pueden ser:
# sedentario (nada o poco ejercicio)
# poco (si realizas ejercicio de 1 a 3 veces por semana)
# moderado (si realizas ejercicio de 3 a 5 veces por semana)
# intenso (si realizas ejercicio de 6 a 7 veces por semana)
# profesional (si realizas entrenamientos de mas de 4 horas diarias)
factor_actividad <- function () {
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad fisica que realizas: ")
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
} else if (repuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else {
respuesta <- 1.9
}
}
factor_actividad()
factor_actividad()
factor_actividad()
factor_actividad()
# Factor de actividad ----
# los niveles de actividad fisica pueden ser:
# sedentario (nada o poco ejercicio)
# poco (si realizas ejercicio de 1 a 3 veces por semana)
# moderado (si realizas ejercicio de 3 a 5 veces por semana)
# intenso (si realizas ejercicio de 6 a 7 veces por semana)
# profesional (si realizas entrenamientos de mas de 4 horas diarias)
factor_actividad <- function () {
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad fisica que realizas: ")
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
} else if (repuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else {
respuesta <- 1.9
}
}
factor_actividad()
# Factor de actividad ----
# los niveles de actividad fisica pueden ser:
# sedentario (nada o poco ejercicio)
# poco (si realizas ejercicio de 1 a 3 veces por semana)
# moderado (si realizas ejercicio de 3 a 5 veces por semana)
# intenso (si realizas ejercicio de 6 a 7 veces por semana)
# profesional (si realizas entrenamientos de mas de 4 horas diarias)
factor_actividad <- function () {
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad fisica que realizas: ")
>>>>>>> Stashed changes
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
<<<<<<< Updated upstream
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
#####Mi duda aqui es si si es 665 y el del hombre 66????
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
return(cantidad_calorias)
}
######Corregí esto para que el valor de la función basal se ponga en un objeto y así lo podamos usar para otras cosas
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
texto_calorias<- print(paste("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias))
# ----- Obtención de datos -----
# Los datos necesarios para el cálculo de calorías recomendadas por día
# son: sexo, peso (en kg), estatura (en cm). edad y factor de actividad.
# Para obtener dichos datos se usará readline
metabolismo_basal <- function (peso, estatura, edad, respuesta){
readline (prompt = "Para conocer la ingesta calórica correcta para ti, ingresa lo siguiente:")
# Sexo ----
sexo <- readline (prompt = "Ingresa tu sexo: ") #pide que especifiques tu sexo ("hombre" o "mujer") en la consola y asigna tu respuesta a un objeto llamado "sexo"
# Peso ----
peso_1 <- readline (prompt = "Ingresa tu peso en kilogramos: ") #pide que especifiques tu peso (en kg) en la consola y asigna tu respuesta a un objeto llamado "peso_1"
peso <- as.numeric(peso_1) # especifico que lea lo que está en "peso_1" como un caracter numérico
# Estatura ----
estatura_1 <- readline (prompt = "Ingresa tu estatura en centimetros: ") #pide que especifiques tu estatura (en cm) en la consola y asigna tu respuesta a un objeto llamado "estatura_1"
estatura <- as.numeric(estatura_1) # especifico que lea lo que está en "estatura_1" como un caracter numérico
# Edad
edad_1 <- readline (prompt = "Ingresa tu edad: ") #pide que especifiques tu edad en la consola y asigna tu respuesta a un objeto llamado "edad_1"
edad <- as.numeric(edad_1) # especifico que lea lo que está en "edad_1" como un caracter numérico
# Factor de actividad ----
# Los niveles de actividad física pueden ser:
#   - sedentario
#   - poco (si realizas ejercicio de 1 a 3 veces por semana)
#   - moderado (si realizas ejercicio de 3 a 5 veces por semana)
#   - intenso (si realizas ejercicio de 6 a 7 veces por semana)
#   - profesional (si realizas entrenamientos de más de 4 horas diarias)
# Y la cifra correspondiente al factor de actividad varía dependiendo del nivel de actividad física.
# Para asignarlo dependiendo del caso, se usará el condicional "if":
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad física que realizas: ")
=======
} else if (repuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional") {
respuesta <- 1.9
}
}
factor_actividad()
# Factor de actividad ----
# los niveles de actividad fisica pueden ser:
# sedentario (nada o poco ejercicio)
# poco (si realizas ejercicio de 1 a 3 veces por semana)
# moderado (si realizas ejercicio de 3 a 5 veces por semana)
# intenso (si realizas ejercicio de 6 a 7 veces por semana)
# profesional (si realizas entrenamientos de mas de 4 horas diarias)
factor_actividad <- function () {
respuesta_1 <- readline (prompt = "Ingresa el nivel de actividad fisica que realizas: ")
>>>>>>> Stashed changes
if (respuesta_1 == "sedentario"){
respuesta <- 1.2
} else if (respuesta_1 == "poco"){
respuesta <- 1.375
<<<<<<< Updated upstream
} else if (respuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional"){
respuesta <- 1.9
}
# cálculo del metabolismo basal
#####Mi duda aqui es si si es 665 y el del hombre 66????
if (sexo == "mujer") {
cantidad_calorias <- ((655 + (9.6 * peso)) + ((1.8 * estatura)*(4.7 * edad)) * respuesta)
} else if (sexo == "hombre") {
cantidad_calorias <- ((66 + (13.7 * peso)) + ((5 * estatura)*(6.8 * edad)) * respuesta)
}
return(cantidad_calorias)
}
######Corregí esto para que el valor de la función basal se ponga en un objeto y así lo podamos usar para otras cosas
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
calorias_diarias
######Corregí esto para que el valor de la función basal se ponga en un objeto y así lo podamos usar para otras cosas
calorias_diarias<- metabolismo_basal (peso, estatura, edad, respuesta)
texto_calorias<- print(paste("La cantidad de calorías requeridas diariamente para su metabolismo basal es de: ", calorias_diarias))
calorias_diarias
=======
} else if (repuesta_1 == "moderado"){
respuesta <- 1.55
} else if (respuesta_1 == "intenso"){
respuesta <- 1.725
} else if (respuesta_1 == "profesional") {
respuesta <- 1.9
}
}
factor_actividad()
factor_actividad()
factor_actividad()
factor_actividad()
>>>>>>> Stashed changes
=======
n_carbohidratos_totales_oa3.2<- (n_carbohidratos_alimento_dieta_oa3.2*n_porcion_alimento3.2)/100
carbohidratos_alimento_dieta_oa3.3<- alimento_origen_animal[alimento_dieta_oa3.3, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa3.3<-as.numeric(carbohidratos_alimento_dieta_oa3.3)
n_carbohidratos_totales_oa3.3<- (n_carbohidratos_alimento_dieta_oa3.3*n_porcion_alimento3.3)/100
carbohidrato_totales_oa3<- n_carbohidratos_totales_oa3.1 + n_carbohidratos_totales_oa3.2 + n_carbohidratos_totales_oa3.3
#Saca las grasas
grasas_alimento_dieta_oa3.1<- alimento_origen_animal[alimento_dieta_oa3.1, "Grasas"]
n_grasas_alimento_dieta_oa3.1<- as.numeric(grasas_alimento_dieta_oa3.1)
n_grasas_totales_oa3.1<- (n_grasas_alimento_dieta_oa3.1*n_porcion_alimento3.1)/100
grasas_alimento_dieta_oa3.2<- alimento_origen_animal[alimento_dieta_oa3.2, "Grasas"]
n_grasas_alimento_dieta_oa3.2<- as.numeric(grasas_alimento_dieta_oa3.2)
n_grasas_totales_oa3.2<- (n_grasas_alimento_dieta_oa3.2*n_porcion_alimento3.2)/100
grasas_alimento_dieta_oa3.3<- alimento_origen_animal[alimento_dieta_oa3.3, "Grasas"]
n_grasas_alimento_dieta_oa3.3<- as.numeric(grasas_alimento_dieta_oa3.3)
n_grasas_totales_oa3.3<- (n_grasas_alimento_dieta_oa3.3*n_porcion_alimento3.3)/100
grasas_totales_oa3<- n_grasas_totales_oa3.1 + n_grasas_totales_oa3.2 + n_grasas_totales_oa3.3
alimento<- c(kcal_totales_oa3, proteina_totales_oa3, carbohidrato_totales_oa3, grasas_totales_oa3)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(alimento)<-nombres
return(print(alimento))
}
}
alimento_animal<- prueba_alimentos()
alimento_animal
######ALIMENTO ORIGEN ANIMAL######
#Para imprimir la tabla
alimento_origen_animal
prueba_alimentos<- function(){
cantidad_de_oa<- readline(prompt = "Ingresa el numero de alimentos de origen animal: ")
cantidad_oa<- as.numeric(cantidad_de_oa)
if(cantidad_oa==1){
#Saca las kcal
alimento_dieta_oa1<-readline(prompt = "Ingresa alimento de origen animal 1: ")
kcal_alimento_dieta_oa1<- alimento_origen_animal[alimento_dieta_oa1, "kcal"]
n_kcal_alimento_dieta_oa1<-as.numeric(kcal_alimento_dieta_oa1)
porcion_alimento1<- readline(prompt = "Ingresa el peso en gr: ")
n_porcion_alimento1<-as.numeric(porcion_alimento1)
kcal_totales_oa1<- (n_kcal_alimento_dieta_oa1*n_porcion_alimento1)/100
kcal_totales_oa1
#Saca las proteinas
proteina_alimento_dieta_oa1<-alimento_origen_animal[alimento_dieta_oa1, "ProteÃ­nas"]
n_proteina_alimento_dieta_oa1<- as.numeric(proteina_alimento_dieta_oa1)
n_proteina_totales_oa1<- (n_proteina_alimento_dieta_oa1*n_porcion_alimento1)/100
#Saca los carbohidratos
carbohidratos_alimento_dieta_oa1<- alimento_origen_animal[alimento_dieta_oa1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa1<-as.numeric(carbohidratos_alimento_dieta_oa1)
n_carbohidratos_totales_oa1<- (n_carbohidratos_alimento_dieta_oa1*n_porcion_alimento1)/100
#Saca las grasas
grasas_alimento_dieta_oa1<- alimento_origen_animal[alimento_dieta_oa1, "Grasas"]
n_grasas_alimento_dieta_oa1<- as.numeric(grasas_alimento_dieta_oa1)
n_grasas_totales_oa1<- (n_grasas_alimento_dieta_oa1*n_porcion_alimento1)/100
alimento<-c(kcal_totales_oa1, n_proteina_totales_oa1, n_carbohidratos_totales_oa1, n_grasas_totales_oa1 )
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(alimento)<-nombres
return(print(alimento))
}else if (cantidad_oa==2){
#Saca las kcal
alimento_dieta_oa2.1<-readline(prompt = "Ingresa alimento de origen animal 1: ")
kcal_alimento_dieta_oa2.1<- alimento_origen_animal[alimento_dieta_oa2.1, "kcal"]
n_kcal_alimento_dieta_oa2.1<-as.numeric(kcal_alimento_dieta_oa2.1)
porcion_alimento2.1<- readline(prompt = "Ingresa el peso en gr del alimento de origen animal 1: ")
n_porcion_alimento2.1<-as.numeric(porcion_alimento2.1)
kcal_oa2.1<- (n_kcal_alimento_dieta_oa2.1*n_porcion_alimento2.1)/100
kcal_oa2.1
alimento_dieta_oa2.2<-readline(prompt = "Ingresa alimento de origen animal 2: ")
kcal_alimento_dieta_oa2.2<- alimento_origen_animal[alimento_dieta_oa2.2, "kcal"]
n_kcal_alimento_dieta_oa2.2<-as.numeric(kcal_alimento_dieta_oa2.2)
porcion_alimento2.2<- readline(prompt = "Ingresa el peso en gr del alimento de origen animal 2: ")
n_porcion_alimento2.2<-as.numeric(porcion_alimento2.2)
kcal_oa2.2<- (n_kcal_alimento_dieta_oa2.2*n_porcion_alimento2.2)/100
kcal_oa2.2
kcal_totales_oa2<- kcal_oa2.1+kcal_oa2.2
kcal_totales_oa2
#Saca la proteina
proteina_alimento_dieta_oa2.1<-alimento_origen_animal[alimento_dieta_oa2.1, "ProteÃ­nas"]
n_proteina_alimento_dieta_oa2.1<- as.numeric(proteina_alimento_dieta_oa2.1)
n_proteina_totales_oa2.1<- (n_proteina_alimento_dieta_oa2.1*n_porcion_alimento2.1)/100
proteina_alimento_dieta_oa2.2<-alimento_origen_animal[alimento_dieta_oa2.2, "ProteÃ­nas"]
n_proteina_alimento_dieta_oa2.2<- as.numeric(proteina_alimento_dieta_oa2.2)
n_proteina_totales_oa2.2<- (n_proteina_alimento_dieta_oa2.2*n_porcion_alimento2.2)/100
proteina_totales_oa2<- n_proteina_totales_oa2.1 + n_proteina_totales_oa2.2
#Saca los carbohidratos
carbohidratos_alimento_dieta_oa2.1<- alimento_origen_animal[alimento_dieta_oa2.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa2.1<-as.numeric(carbohidratos_alimento_dieta_oa2.1)
n_carbohidratos_totales_oa2.1<- (n_carbohidratos_alimento_dieta_oa2.1*n_porcion_alimento2.1)/100
carbohidratos_alimento_dieta_oa2.2<- alimento_origen_animal[alimento_dieta_oa2.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa2.2<-as.numeric(carbohidratos_alimento_dieta_oa2.2)
n_carbohidratos_totales_oa2.2<- (n_carbohidratos_alimento_dieta_oa2.2*n_porcion_alimento2.2)/100
carbohidrato_totales_oa2<- n_carbohidratos_totales_oa2.1 + n_carbohidratos_totales_oa2.2
#Saca las grasas
grasas_alimento_dieta_oa2.1<- alimento_origen_animal[alimento_dieta_oa2.1, "Grasas"]
n_grasas_alimento_dieta_oa2.1<- as.numeric(grasas_alimento_dieta_oa2.1)
n_grasas_totales_oa2.1<- (n_grasas_alimento_dieta_oa2.1*n_porcion_alimento2.1)/100
grasas_alimento_dieta_oa2.2<- alimento_origen_animal[alimento_dieta_oa2.2, "Grasas"]
n_grasas_alimento_dieta_oa2.2<- as.numeric(grasas_alimento_dieta_oa2.2)
n_grasas_totales_oa2.2<- (n_grasas_alimento_dieta_oa2.2*n_porcion_alimento2.2)/100
grasas_totales_oa2<- n_grasas_totales_oa2.1 + n_grasas_totales_oa2.2
alimento<- c(kcal_totales_oa2, proteina_totales_oa2, carbohidrato_totales_oa2, grasas_totales_oa2)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(alimento)<-nombres
return(print(alimento))
} else if (cantidad_oa==3){
#Saca las kcal
alimento_dieta_oa3.1<-readline(prompt = "Ingresa alimento de origen animal 1: ")
kcal_alimento_dieta_oa3.1<- alimento_origen_animal[alimento_dieta_oa3.1, "kcal"]
n_kcal_alimento_dieta_oa3.1<-as.numeric(kcal_alimento_dieta_oa3.1)
class(n_kcal_alimento_dieta_oa3.1)
porcion_alimento3.1<- readline(prompt = "Ingresa el peso en gr del alimento de origen animal 1: ")
n_porcion_alimento3.1<-as.numeric(porcion_alimento3.1)
class(n_porcion_alimento3.1)
kcal_oa3.1<- (n_kcal_alimento_dieta_oa3.1*n_porcion_alimento3.1)/100
kcal_oa3.1
alimento_dieta_oa3.2<-readline(prompt = "Ingresa alimento de origen animal 2: ")
kcal_alimento_dieta_oa3.2<- alimento_origen_animal[alimento_dieta_oa3.2, "kcal"]
n_kcal_alimento_dieta_oa3.2<-as.numeric(kcal_alimento_dieta_oa3.2)
class(n_kcal_alimento_dieta_oa3.2)
porcion_alimento3.2<- readline(prompt = "Ingresa el peso en gr del alimento de origen animal 2: ")
n_porcion_alimento3.2<-as.numeric(porcion_alimento3.2)
class(n_porcion_alimento3.2)
kcal_oa3.2<- (n_kcal_alimento_dieta_oa3.2*n_porcion_alimento3.2)/100
kcal_oa3.2
alimento_dieta_oa3.3<-readline(prompt = "Ingresa alimento de origen animal 3: ")
kcal_alimento_dieta_oa3.3<- alimento_origen_animal[alimento_dieta_oa3.3, "kcal"]
n_kcal_alimento_dieta_oa3.3<-as.numeric(kcal_alimento_dieta_oa3.3)
class(n_kcal_alimento_dieta_oa3.3)
porcion_alimento3.3<- readline(prompt = "Ingresa el peso en gr del alimento de origen animal 3: ")
n_porcion_alimento3.3<-as.numeric(porcion_alimento3.3)
class(n_porcion_alimento3.3)
kcal_oa3.3<- (n_kcal_alimento_dieta_oa3.2*n_porcion_alimento3.3)/100
kcal_oa3.2
kcal_totales_oa3<- kcal_oa3.1+kcal_oa3.2+kcal_oa3.3
kcal_totales_oa3
#Saca las proteinas
proteina_alimento_dieta_oa3.1<-alimento_origen_animal[alimento_dieta_oa3.1, "ProteÃ­nas"]
n_proteina_alimento_dieta_oa3.1<- as.numeric(proteina_alimento_dieta_oa3.1)
n_proteina_totales_oa3.1<- (n_proteina_alimento_dieta_oa3.1*n_porcion_alimento3.1)/100
proteina_alimento_dieta_oa3.2<-alimento_origen_animal[alimento_dieta_oa3.2, "ProteÃ­nas"]
n_proteina_alimento_dieta_oa3.2<- as.numeric(proteina_alimento_dieta_oa3.2)
n_proteina_totales_oa3.2<- (n_proteina_alimento_dieta_oa3.2*n_porcion_alimento3.2)/100
proteina_alimento_dieta_oa3.3<-alimento_origen_animal[alimento_dieta_oa3.3, "ProteÃ­nas"]
n_proteina_alimento_dieta_oa3.3<- as.numeric(proteina_alimento_dieta_oa3.3)
n_proteina_totales_oa3.3<- (n_proteina_alimento_dieta_oa3.3*n_porcion_alimento3.3)/100
proteina_totales_oa3<- n_proteina_totales_oa3.1 + n_proteina_totales_oa3.2 + n_proteina_totales_oa3.3
#Saca los carbohidratos
carbohidratos_alimento_dieta_oa3.1<- alimento_origen_animal[alimento_dieta_oa3.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa3.1<-as.numeric(carbohidratos_alimento_dieta_oa3.1)
n_carbohidratos_totales_oa3.1<- (n_carbohidratos_alimento_dieta_oa3.1*n_porcion_alimento3.1)/100
carbohidratos_alimento_dieta_oa3.2<- alimento_origen_animal[alimento_dieta_oa3.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa3.2<-as.numeric(carbohidratos_alimento_dieta_oa3.2)
n_carbohidratos_totales_oa3.2<- (n_carbohidratos_alimento_dieta_oa3.2*n_porcion_alimento3.2)/100
carbohidratos_alimento_dieta_oa3.3<- alimento_origen_animal[alimento_dieta_oa3.3, "Carbohidratos"]
n_carbohidratos_alimento_dieta_oa3.3<-as.numeric(carbohidratos_alimento_dieta_oa3.3)
n_carbohidratos_totales_oa3.3<- (n_carbohidratos_alimento_dieta_oa3.3*n_porcion_alimento3.3)/100
carbohidrato_totales_oa3<- n_carbohidratos_totales_oa3.1 + n_carbohidratos_totales_oa3.2 + n_carbohidratos_totales_oa3.3
#Saca las grasas
grasas_alimento_dieta_oa3.1<- alimento_origen_animal[alimento_dieta_oa3.1, "Grasas"]
n_grasas_alimento_dieta_oa3.1<- as.numeric(grasas_alimento_dieta_oa3.1)
n_grasas_totales_oa3.1<- (n_grasas_alimento_dieta_oa3.1*n_porcion_alimento3.1)/100
grasas_alimento_dieta_oa3.2<- alimento_origen_animal[alimento_dieta_oa3.2, "Grasas"]
n_grasas_alimento_dieta_oa3.2<- as.numeric(grasas_alimento_dieta_oa3.2)
n_grasas_totales_oa3.2<- (n_grasas_alimento_dieta_oa3.2*n_porcion_alimento3.2)/100
grasas_alimento_dieta_oa3.3<- alimento_origen_animal[alimento_dieta_oa3.3, "Grasas"]
n_grasas_alimento_dieta_oa3.3<- as.numeric(grasas_alimento_dieta_oa3.3)
n_grasas_totales_oa3.3<- (n_grasas_alimento_dieta_oa3.3*n_porcion_alimento3.3)/100
grasas_totales_oa3<- n_grasas_totales_oa3.1 + n_grasas_totales_oa3.2 + n_grasas_totales_oa3.3
alimento<- c(kcal_totales_oa3, proteina_totales_oa3, carbohidrato_totales_oa3, grasas_totales_oa3)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(alimento)<-nombres
return(print(alimento))
}
}
alimento_animal<- prueba_alimentos()
alimento_animal
#1. Alimentos de origen animal
#Se cargo la tabla de alimentos de origen animal, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Alimentos_de_origen_animal.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
alimento_origen_animal <-read.table("Alimentos_de_origen_animal.csv", header=TRUE, sep=',', row.names = 1)
alimento_origen_animal
#2. Cereales
#Se cargo la tabla de cereales, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Cereales.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
cereales <-read.table("Cereales.csv", header=TRUE, sep=',', row.names=1)
cereales
#3. Fruta
#Se cargo la tabla de fruta, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Fruta.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
frutas<-read.table("Fruta.csv",header=TRUE, sep=',', row.names = 1 )
frutas
#4. Verduras
#Se cargo la tabla de verduras, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Verduras.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
verduras<-read.table("Verduras.csv",header=TRUE, sep=',', row.names = 1 )
verduras
#5. Leguminosas
#Se cargo la tabla de leguminosas, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Leguminosas.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
leguminosas<- read.table("Leguminosas.csv",header=TRUE, sep=',', row.names = 1)
leguminosas
#6. Grasas con proteinas
#Se cargo la tabla de proteinas, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Grasas con proteina.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
grasas_con_proteinas<- read.table("Grasas con proteina.csv", header = TRUE, sep=',', row.names = 1)
grasas_con_proteinas
alimento_animal<- prueba_alimentos()
#######Fruta ###########
prueba_fruta<-function(){
cantidad_de_fruta<- readline(prompt = "Ingresa el numero de frutas: ")
cantidad_fruta<- as.numeric(cantidad_de_fruta)
if(cantidad_fruta==1){
#Saca las kcal
alimento_dieta_fruta1<-readline(prompt = "Ingresa la fruta 1: ")
kcal_alimento_dieta_fruta1<- frutas[alimento_dieta_fruta1, "kcal"]
n_kcal_alimento_dieta_fruta1<-as.numeric(kcal_alimento_dieta_fruta1)
porcion_fruta1<- readline(prompt = "Ingresa el peso en gr: ")
n_porcion_fruta1<-as.numeric(porcion_fruta1)
kcal_totales_fruta1<- (n_kcal_alimento_dieta_fruta1*n_porcion_fruta1)/100
kcal_totales_fruta1
#Saca las proteinas
proteina_alimento_dieta_fruta1<-frutas[alimento_dieta_fruta1, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta1<- as.numeric(proteina_alimento_dieta_fruta1)
n_proteina_totales_fruta1<- (n_proteina_alimento_dieta_fruta1*n_porcion_fruta1)/100
#Saca los carbohidratos
carbohidratos_alimento_dieta_fruta1<- frutas[alimento_dieta_fruta1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta1<-as.numeric(carbohidratos_alimento_dieta_fruta1)
n_carbohidratos_totales_fruta1<- (n_carbohidratos_alimento_dieta_fruta1*n_porcion_fruta1)/100
#Saca las grasas
grasas_alimento_dieta_fruta1<- frutas[alimento_dieta_fruta1, "Grasas"]
n_grasas_alimento_dieta_fruta1<- as.numeric(grasas_alimento_dieta_fruta1)
n_grasas_totales_fruta1<- (n_grasas_alimento_dieta_fruta1*n_porcion_fruta1)/100
fruta<- c(kcal_totales_fruta1, n_proteina_totales_fruta1, n_carbohidratos_totales_fruta1, n_grasas_totales_fruta1)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(fruta)<- nombres
return(print(fruta))
}else if (cantidad_fruta==2){
#Saca las kcal
alimento_dieta_fruta2.1<-readline(prompt = "Ingresa fruta 1: ")
kcal_alimento_dieta_fruta2.1<- frutas[alimento_dieta_fruta2.1, "kcal"]
n_kcal_alimento_dieta_fruta2.1<-as.numeric(kcal_alimento_dieta_fruta2.1)
porcion_fruta2.1<- readline(prompt = "Ingresa el peso en gr de la fruta 1: ")
n_porcion_fruta2.1<-as.numeric(porcion_fruta2.1)
kcal_fruta2.1<- (n_kcal_alimento_dieta_fruta2.1*n_porcion_fruta2.1)/100
kcal_fruta2.1
alimento_dieta_fruta2.2<-readline(prompt = "Ingresa fruta 2: ")
kcal_alimento_dieta_fruta2.2<- frutas[alimento_dieta_fruta2.2, "kcal"]
n_kcal_alimento_dieta_fruta2.2<-as.numeric(kcal_alimento_dieta_fruta2.2)
porcion_fruta2.2<- readline(prompt = "Ingresa el peso en gr de la fruta 2: ")
n_porcion_fruta2.2<-as.numeric(porcion_fruta2.2)
kcal_fruta2.2<- (n_kcal_alimento_dieta_fruta2.2*n_porcion_fruta2.2)/100
kcal_fruta2.2
kcal_totales_fruta2<- kcal_fruta2.1+kcal_fruta2.2
kcal_totales_fruta2
#Saca la proteina
proteina_alimento_dieta_fruta2.1<-frutas[alimento_dieta_fruta2.1, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta2.1<- as.numeric(proteina_alimento_dieta_fruta2.1)
n_proteina_totales_fruta2.1<- (n_proteina_alimento_dieta_fruta2.1*n_porcion_fruta2.1)/100
proteina_alimento_dieta_fruta2.2<-frutas[alimento_dieta_fruta2.2, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta2.2<- as.numeric(proteina_alimento_dieta_fruta2.2)
n_proteina_totales_fruta2.2<- (n_proteina_alimento_dieta_fruta2.2*n_porcion_fruta2.2)/100
proteina_totales_fruta2<- n_proteina_totales_fruta2.1 + n_proteina_totales_fruta2.2
#Saca los carbohidratos
carbohidratos_alimento_dieta_fruta2.1<- frutas[alimento_dieta_fruta2.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta2.1<-as.numeric(carbohidratos_alimento_dieta_fruta2.1)
n_carbohidratos_totales_fruta2.1<- (n_carbohidratos_alimento_dieta_fruta2.1*n_porcion_fruta2.1)/100
carbohidratos_alimento_dieta_fruta2.2<- frutas[alimento_dieta_fruta2.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta2.2<-as.numeric(carbohidratos_alimento_dieta_fruta2.2)
n_carbohidratos_totales_fruta2.2<- (n_carbohidratos_alimento_dieta_fruta2.2*n_porcion_fruta2.2)/100
carbohidrato_totales_fruta2<- n_carbohidratos_totales_fruta2.1 + n_carbohidratos_totales_fruta2.2
#Saca las grasas
grasas_alimento_dieta_fruta2.1<- frutas[alimento_dieta_fruta2.1, "Grasas"]
n_grasas_alimento_dieta_fruta2.1<- as.numeric(grasas_alimento_dieta_fruta2.1)
n_grasas_totales_fruta2.1<- (n_grasas_alimento_dieta_fruta2.1*n_porcion_fruta2.1)/100
grasas_alimento_dieta_fruta2.2<- frutas[alimento_dieta_fruta2.2, "Grasas"]
n_grasas_alimento_dieta_fruta2.2<- as.numeric(grasas_alimento_dieta_fruta2.2)
n_grasas_totales_fruta2.2<- (n_grasas_alimento_dieta_fruta2.2*n_porcion_fruta2.2)/100
grasas_totales_fruta2<- n_grasas_totales_fruta2.1 + n_grasas_totales_fruta2.2
fruta<- c(kcal_totales_fruta2, proteina_totales_fruta2, carbohidrato_totales_fruta2, grasas_totales_fruta2)
nombres<-c("kcal","proteina","carbohidratos","grasas")
names(fruta)<- nombres
return(print(fruta))
} else if (cantidad_fruta==3){
#Saca las kcal
alimento_dieta_fruta3.1<-readline(prompt = "Ingresa la fruta 1: ")
kcal_alimento_dieta_fruta3.1<- frutas[alimento_dieta_fruta3.1, "kcal"]
n_kcal_alimento_dieta_fruta3.1<-as.numeric(kcal_alimento_dieta_fruta3.1)
porcion_fruta3.1<- readline(prompt = "Ingresa el peso en gr de la fruta 1: ")
n_porcion_fruta3.1<-as.numeric(porcion_fruta3.1)
kcal_fruta3.1<- (n_kcal_alimento_dieta_fruta3.1*n_porcion_fruta3.1)/100
kcal_fruta3.1
alimento_dieta_fruta3.2<-readline(prompt = "Ingresa la fruta 2: ")
kcal_alimento_dieta_fruta3.2<- frutas[alimento_dieta_fruta3.2, "kcal"]
n_kcal_alimento_dieta_fruta3.2<-as.numeric(kcal_alimento_dieta_fruta3.2)
porcion_fruta3.2<- readline(prompt = "Ingresa el peso en gr de la fruta 2: ")
n_porcion_fruta3.2<-as.numeric(porcion_fruta3.2)
kcal_fruta3.2<- (n_kcal_alimento_dieta_fruta3.2*n_porcion_fruta3.2)/100
kcal_fruta3.2
alimento_dieta_fruta3.3<-readline(prompt = "Ingresa la fruta 3: ")
kcal_alimento_dieta_fruta3.3<- frutas[alimento_dieta_fruta3.3, "kcal"]
n_kcal_alimento_dieta_fruta3.3<-as.numeric(kcal_alimento_dieta_fruta3.3)
porcion_fruta3.3<- readline(prompt = "Ingresa el peso en gr de la fruta 3: ")
n_porcion_fruta3.3<-as.numeric(porcion_fruta3.3)
kcal_fruta3.3<- (n_kcal_alimento_dieta_fruta3.2*n_porcion_fruta3.3)/100
kcal_fruta3.3
kcal_totales_fruta3<- kcal_fruta3.1+kcal_fruta3.2+kcal_fruta3.3
kcal_totales_fruta3
#Saca las proteinas
proteina_alimento_dieta_fruta3.1<-frutas[alimento_dieta_fruta3.1, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta3.1<- as.numeric(proteina_alimento_dieta_fruta3.1)
n_proteina_totales_fruta3.1<- (n_proteina_alimento_dieta_fruta3.1*n_porcion_fruta3.1)/100
proteina_alimento_dieta_fruta3.2<-frutas[alimento_dieta_fruta3.2, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta3.2<- as.numeric(proteina_alimento_dieta_fruta3.2)
n_proteina_totales_fruta3.2<- (n_proteina_alimento_dieta_fruta3.2*n_porcion_fruta3.2)/100
proteina_alimento_dieta_fruta3.3<-frutas[alimento_dieta_fruta3.3, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta3.3<- as.numeric(proteina_alimento_dieta_fruta3.3)
n_proteina_totales_fruta3.3<- (n_proteina_alimento_dieta_fruta3.3*n_porcion_fruta3.3)/100
proteina_totales_fruta3<- n_proteina_totales_fruta3.1 + n_proteina_totales_fruta3.2 + n_proteina_totales_fruta3.3
#Saca los carbohidratos
carbohidratos_alimento_dieta_fruta3.1<- frutas[alimento_dieta_fruta3.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta3.1<-as.numeric(carbohidratos_alimento_dieta_fruta3.1)
n_carbohidratos_totales_fruta3.1<- (n_carbohidratos_alimento_dieta_fruta3.1*n_porcion_fruta3.1)/100
carbohidratos_alimento_dieta_fruta3.2<- frutas[alimento_dieta_fruta3.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta3.2<-as.numeric(carbohidratos_alimento_dieta_fruta3.2)
n_carbohidratos_totales_fruta3.2<- (n_carbohidratos_alimento_dieta_fruta3.2*n_porcion_fruta3.2)/100
carbohidratos_alimento_dieta_fruta3.3<- frutas[alimento_dieta_fruta3.3, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta3.3<-as.numeric(carbohidratos_alimento_dieta_fruta3.3)
n_carbohidratos_totales_fruta3.3<- (n_carbohidratos_alimento_dieta_fruta3.3*n_porcion_fruta3.3)/100
carbohidrato_totales_fruta3<- n_carbohidratos_totales_fruta3.1 + n_carbohidratos_totales_fruta3.2 + n_carbohidratos_totales_fruta3.3
#Saca las grasas
grasas_alimento_dieta_fruta3.1<- frutas[alimento_dieta_fruta3.1, "Grasas"]
n_grasas_alimento_dieta_fruta3.1<- as.numeric(grasas_alimento_dieta_fruta3.1)
n_grasas_totales_fruta3.1<- (n_grasas_alimento_dieta_fruta3.1*n_porcion_fruta3.1)/100
grasas_alimento_dieta_fruta3.2<- frutas[alimento_dieta_fruta3.2, "Grasas"]
n_grasas_alimento_dieta_fruta3.2<- as.numeric(grasas_alimento_dieta_fruta3.2)
n_grasas_totales_fruta3.2<- (n_grasas_alimento_dieta_fruta3.2*n_porcion_fruta3.2)/100
grasas_alimento_dieta_fruta3.3<- frutas[alimento_dieta_fruta3.3, "Grasas"]
n_grasas_alimento_dieta_fruta3.3<- as.numeric(grasas_alimento_dieta_fruta3.3)
n_grasas_totales_fruta3.3<- (n_grasas_alimento_dieta_fruta3.3*n_porcion_fruta3.3)/100
grasas_totales_fruta3<- n_grasas_totales_fruta3.1 + n_grasas_totales_fruta3.2 + n_grasas_totales_fruta3.3
fruta<- c(kcal_totales_fruta3, proteina_totales_fruta3, carbohidrato_totales_fruta3, grasas_totales_fruta3)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(fruta)<- nombres
return(print(fruta))
} else if (cantidad_fruta==4){
alimento_dieta_fruta4.1<-readline(prompt = "Ingresa la fruta 1: ")
kcal_alimento_dieta_fruta4.1<- frutas[alimento_dieta_fruta4.1, "kcal"]
n_kcal_alimento_dieta_fruta4.1<-as.numeric(kcal_alimento_dieta_fruta4.1)
porcion_fruta4.1<- readline(prompt = "Ingresa el peso en gr de la fruta 1: ")
n_porcion_fruta4.1<-as.numeric(porcion_fruta4.1)
kcal_fruta4.1<- (n_kcal_alimento_dieta_fruta4.1*n_porcion_fruta4.1)/100
kcal_fruta4.1
alimento_dieta_fruta4.2<-readline(prompt = "Ingresa la fruta 2: ")
kcal_alimento_dieta_fruta4.2<- frutas[alimento_dieta_fruta4.2, "kcal"]
n_kcal_alimento_dieta_fruta4.2<-as.numeric(kcal_alimento_dieta_fruta4.2)
porcion_fruta4.2<- readline(prompt = "Ingresa el peso en gr de la fruta 2: ")
n_porcion_fruta4.2<-as.numeric(porcion_fruta4.2)
kcal_fruta4.2<- (n_kcal_alimento_dieta_fruta4.2*n_porcion_fruta4.2)/100
kcal_fruta4.2
alimento_dieta_fruta4.3<-readline(prompt = "Ingresa la fruta 3: ")
kcal_alimento_dieta_fruta4.3<- frutas[alimento_dieta_fruta4.3, "kcal"]
n_kcal_alimento_dieta_fruta4.3<-as.numeric(kcal_alimento_dieta_fruta4.3)
porcion_fruta4.3<- readline(prompt = "Ingresa el peso en gr de la fruta 3: ")
n_porcion_fruta4.3<-as.numeric(porcion_fruta4.3)
kcal_fruta4.3<- (n_kcal_alimento_dieta_fruta4.3*n_porcion_fruta4.3)/100
kcal_fruta4.3
alimento_dieta_fruta4.4<-readline(prompt = "Ingresa la fruta 4: ")
kcal_alimento_dieta_fruta4.4<- frutas[alimento_dieta_fruta4.4, "kcal"]
n_kcal_alimento_dieta_fruta4.4<-as.numeric(kcal_alimento_dieta_fruta4.4)
porcion_fruta4.4<- readline(prompt = "Ingresa el peso en gr de la fruta 4: ")
n_porcion_fruta4.4<-as.numeric(porcion_fruta4.4)
kcal_fruta4.4<- (n_kcal_alimento_dieta_fruta4.4*n_porcion_fruta4.4)/100
kcal_fruta4.4
kcal_totales_fruta4<- kcal_fruta4.1+kcal_fruta4.2+kcal_fruta4.3+ kcal_fruta4.4
kcal_totales_fruta4
#Saca las proteinas
proteina_alimento_dieta_fruta4.1<-frutas[alimento_dieta_fruta4.1, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta4.1<- as.numeric(proteina_alimento_dieta_fruta4.1)
n_proteina_totales_fruta4.1<- (n_proteina_alimento_dieta_fruta4.1*n_porcion_fruta4.1)/100
proteina_alimento_dieta_fruta4.2<-frutas[alimento_dieta_fruta4.2, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta4.2<- as.numeric(proteina_alimento_dieta_fruta4.2)
n_proteina_totales_fruta4.2<- (n_proteina_alimento_dieta_fruta4.2*n_porcion_fruta4.2)/100
proteina_alimento_dieta_fruta4.3<-frutas[alimento_dieta_fruta4.3, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta4.3<- as.numeric(proteina_alimento_dieta_fruta4.3)
n_proteina_totales_fruta4.3<- (n_proteina_alimento_dieta_fruta4.3*n_porcion_fruta4.3)/100
proteina_alimento_dieta_fruta4.4<-frutas[alimento_dieta_fruta4.4, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta4.4<- as.numeric(proteina_alimento_dieta_fruta4.4)
n_proteina_totales_fruta4.4<- (n_proteina_alimento_dieta_fruta4.4*n_porcion_fruta4.4)/100
proteina_totales_fruta4<- n_proteina_totales_fruta4.1 + n_proteina_totales_fruta4.2 + n_proteina_totales_fruta4.3 + n_proteina_totales_fruta4.4
#Saca los carbohidratos
carbohidratos_alimento_dieta_fruta4.1<- frutas[alimento_dieta_fruta4.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta4.1<-as.numeric(carbohidratos_alimento_dieta_fruta4.1)
n_carbohidratos_totales_fruta4.1<- (n_carbohidratos_alimento_dieta_fruta4.1*n_porcion_fruta4.1)/100
carbohidratos_alimento_dieta_fruta4.2<- frutas[alimento_dieta_fruta4.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta4.2<-as.numeric(carbohidratos_alimento_dieta_fruta4.2)
n_carbohidratos_totales_fruta4.2<- (n_carbohidratos_alimento_dieta_fruta4.2*n_porcion_fruta4.2)/100
carbohidratos_alimento_dieta_fruta4.3<- frutas[alimento_dieta_fruta4.3, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta4.3<-as.numeric(carbohidratos_alimento_dieta_fruta4.3)
n_carbohidratos_totales_fruta4.3<- (n_carbohidratos_alimento_dieta_fruta4.3*n_porcion_fruta4.3)/100
carbohidratos_alimento_dieta_fruta4.4<- frutas[alimento_dieta_fruta4.4, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta4.4<-as.numeric(carbohidratos_alimento_dieta_fruta4.4)
n_carbohidratos_totales_fruta4.4<- (n_carbohidratos_alimento_dieta_fruta4.4*n_porcion_fruta4.4)/100
carbohidrato_totales_fruta4<- n_carbohidratos_totales_fruta4.1 + n_carbohidratos_totales_fruta4.2 + n_carbohidratos_totales_fruta4.3 + n_carbohidratos_totales_fruta4.4
#Saca las grasas
grasas_alimento_dieta_fruta4.1<- frutas[alimento_dieta_fruta4.1, "Grasas"]
n_grasas_alimento_dieta_fruta4.1<- as.numeric(grasas_alimento_dieta_fruta4.1)
n_grasas_totales_fruta4.1<- (n_grasas_alimento_dieta_fruta4.1*n_porcion_fruta4.1)/100
grasas_alimento_dieta_fruta4.2<- frutas[alimento_dieta_fruta4.2, "Grasas"]
n_grasas_alimento_dieta_fruta4.2<- as.numeric(grasas_alimento_dieta_fruta4.2)
n_grasas_totales_fruta4.2<- (n_grasas_alimento_dieta_fruta4.2*n_porcion_fruta4.2)/100
grasas_alimento_dieta_fruta4.3<- frutas[alimento_dieta_fruta4.3, "Grasas"]
n_grasas_alimento_dieta_fruta4.3<- as.numeric(grasas_alimento_dieta_fruta4.3)
n_grasas_totales_fruta4.3<- (n_grasas_alimento_dieta_fruta4.3*n_porcion_fruta4.3)/100
grasas_alimento_dieta_fruta4.4<- frutas[alimento_dieta_fruta4.4, "Grasas"]
n_grasas_alimento_dieta_fruta4.4<- as.numeric(grasas_alimento_dieta_fruta4.4)
n_grasas_totales_fruta4.4<- (n_grasas_alimento_dieta_fruta4.4*n_porcion_fruta4.4)/100
grasas_totales_fruta4<- n_grasas_totales_fruta4.1 + n_grasas_totales_fruta4.2 + n_grasas_totales_fruta4.3 + n_grasas_totales_fruta4.4
fruta<- c(kcal_totales_fruta4, proteina_totales_fruta4, carbohidrato_totales_fruta4, grasas_totales_fruta4)
nombre<- c("kcal","proteina","carbohidratos","grasas")
names(fruta)<- nombre
return(print(fruta))
} else if (cantidad_fruta==5){
alimento_dieta_fruta5.1<-readline(prompt = "Ingresa la fruta 1: ")
kcal_alimento_dieta_fruta5.1<- frutas[alimento_dieta_fruta5.1, "kcal"]
n_kcal_alimento_dieta_fruta5.1<-as.numeric(kcal_alimento_dieta_fruta5.1)
porcion_fruta5.1<- readline(prompt = "Ingresa el peso en gr de la fruta 1: ")
n_porcion_fruta5.1<-as.numeric(porcion_fruta5.1)
kcal_fruta5.1<- (n_kcal_alimento_dieta_fruta5.1*n_porcion_fruta5.1)/100
kcal_fruta5.1
alimento_dieta_fruta5.2<-readline(prompt = "Ingresa la fruta 2: ")
kcal_alimento_dieta_fruta5.2<- frutas[alimento_dieta_fruta5.2, "kcal"]
n_kcal_alimento_dieta_fruta5.2<-as.numeric(kcal_alimento_dieta_fruta5.2)
porcion_fruta5.2<- readline(prompt = "Ingresa el peso en gr de la fruta 2: ")
n_porcion_fruta5.2<-as.numeric(porcion_fruta5.2)
kcal_fruta5.2<- (n_kcal_alimento_dieta_fruta5.2*n_porcion_fruta5.2)/100
kcal_fruta5.2
alimento_dieta_fruta5.3<-readline(prompt = "Ingresa la fruta 3: ")
kcal_alimento_dieta_fruta5.3<- frutas[alimento_dieta_fruta5.3, "kcal"]
n_kcal_alimento_dieta_fruta5.3<-as.numeric(kcal_alimento_dieta_fruta5.3)
porcion_fruta5.3<- readline(prompt = "Ingresa el peso en gr de la fruta 3: ")
n_porcion_fruta5.3<-as.numeric(porcion_fruta5.3)
kcal_fruta5.3<- (n_kcal_alimento_dieta_fruta5.3*n_porcion_fruta5.3)/100
kcal_fruta5.3
alimento_dieta_fruta5.4<-readline(prompt = "Ingresa la fruta 4: ")
kcal_alimento_dieta_fruta5.4<- frutas[alimento_dieta_fruta5.4, "kcal"]
n_kcal_alimento_dieta_fruta5.4<-as.numeric(kcal_alimento_dieta_fruta5.4)
porcion_fruta5.4<- readline(prompt = "Ingresa el peso en gr de la fruta 4: ")
n_porcion_fruta5.4<-as.numeric(porcion_fruta5.4)
kcal_fruta5.4<- (n_kcal_alimento_dieta_fruta5.4*n_porcion_fruta5.4)/100
kcal_fruta5.4
alimento_dieta_fruta5.5<-readline(prompt = "Ingresa la fruta 5: ")
kcal_alimento_dieta_fruta5.5<- frutas[alimento_dieta_fruta5.5, "kcal"]
n_kcal_alimento_dieta_fruta5.5<-as.numeric(kcal_alimento_dieta_fruta5.5)
porcion_fruta5.5<- readline(prompt = "Ingresa el peso en gr de la fruta 5: ")
n_porcion_fruta5.5<-as.numeric(porcion_fruta5.5)
kcal_fruta5.5<- (n_kcal_alimento_dieta_fruta5.5*n_porcion_fruta5.5)/100
kcal_fruta5.5
kcal_totales_fruta5<- kcal_fruta5.1+kcal_fruta5.2+kcal_fruta5.3+ kcal_fruta5.4 + kcal_fruta5.5
kcal_totales_fruta5
#Saca las proteinas
proteina_alimento_dieta_fruta5.1<-frutas[alimento_dieta_fruta5.1, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta5.1<- as.numeric(proteina_alimento_dieta_fruta5.1)
n_proteina_totales_fruta5.1<- (n_proteina_alimento_dieta_fruta5.1*n_porcion_fruta5.1)/100
proteina_alimento_dieta_fruta5.2<-frutas[alimento_dieta_fruta5.2, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta5.2<- as.numeric(proteina_alimento_dieta_fruta5.2)
n_proteina_totales_fruta5.2<- (n_proteina_alimento_dieta_fruta5.2*n_porcion_fruta5.2)/100
proteina_alimento_dieta_fruta5.3<-frutas[alimento_dieta_fruta5.3, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta5.3<- as.numeric(proteina_alimento_dieta_fruta5.3)
n_proteina_totales_fruta5.3<- (n_proteina_alimento_dieta_fruta5.3*n_porcion_fruta5.3)/100
proteina_alimento_dieta_fruta5.4<-frutas[alimento_dieta_fruta5.4, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta5.4<- as.numeric(proteina_alimento_dieta_fruta5.4)
n_proteina_totales_fruta5.4<- (n_proteina_alimento_dieta_fruta5.4*n_porcion_fruta5.4)/100
proteina_alimento_dieta_fruta5.5<-frutas[alimento_dieta_fruta5.5, "ProteÃ­nas"]
n_proteina_alimento_dieta_fruta5.5<- as.numeric(proteina_alimento_dieta_fruta5.5)
n_proteina_totales_fruta5.5<- (n_proteina_alimento_dieta_fruta5.5*n_porcion_fruta5.5)/100
proteina_totales_fruta5<- n_proteina_totales_fruta5.1 + n_proteina_totales_fruta5.2 + n_proteina_totales_fruta5.3 + n_proteina_totales_fruta5.4 + n_proteina_totales_fruta5.5
#Saca los carbohidratos
carbohidratos_alimento_dieta_fruta5.1<- frutas[alimento_dieta_fruta5.1, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta5.1<-as.numeric(carbohidratos_alimento_dieta_fruta5.1)
n_carbohidratos_totales_fruta5.1<- (n_carbohidratos_alimento_dieta_fruta5.1*n_porcion_fruta5.1)/100
carbohidratos_alimento_dieta_fruta5.2<- frutas[alimento_dieta_fruta5.2, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta5.2<-as.numeric(carbohidratos_alimento_dieta_fruta5.2)
n_carbohidratos_totales_fruta5.2<- (n_carbohidratos_alimento_dieta_fruta5.2*n_porcion_fruta5.2)/100
carbohidratos_alimento_dieta_fruta5.3<- frutas[alimento_dieta_fruta5.3, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta5.3<-as.numeric(carbohidratos_alimento_dieta_fruta5.3)
n_carbohidratos_totales_fruta5.3<- (n_carbohidratos_alimento_dieta_fruta5.3*n_porcion_fruta5.3)/100
carbohidratos_alimento_dieta_fruta5.4<- frutas[alimento_dieta_fruta5.4, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta5.4<-as.numeric(carbohidratos_alimento_dieta_fruta5.4)
n_carbohidratos_totales_fruta5.4<- (n_carbohidratos_alimento_dieta_fruta5.4*n_porcion_fruta5.4)/100
carbohidratos_alimento_dieta_fruta5.5<- frutas[alimento_dieta_fruta5.5, "Carbohidratos"]
n_carbohidratos_alimento_dieta_fruta5.5<-as.numeric(carbohidratos_alimento_dieta_fruta5.5)
n_carbohidratos_totales_fruta5.5<- (n_carbohidratos_alimento_dieta_fruta5.5*n_porcion_fruta5.5)/100
carbohidrato_totales_fruta5<- n_carbohidratos_totales_fruta5.1 + n_carbohidratos_totales_fruta5.2 + n_carbohidratos_totales_fruta5.3 + n_carbohidratos_totales_fruta5.4 + n_carbohidratos_totales_fruta5.5
#Saca las grasas
grasas_alimento_dieta_fruta5.1<- frutas[alimento_dieta_fruta5.1, "Grasas"]
n_grasas_alimento_dieta_fruta5.1<- as.numeric(grasas_alimento_dieta_fruta5.1)
n_grasas_totales_fruta5.1<- (n_grasas_alimento_dieta_fruta5.1*n_porcion_fruta5.1)/100
grasas_alimento_dieta_fruta5.2<- frutas[alimento_dieta_fruta5.2, "Grasas"]
n_grasas_alimento_dieta_fruta5.2<- as.numeric(grasas_alimento_dieta_fruta5.2)
n_grasas_totales_fruta5.2<- (n_grasas_alimento_dieta_fruta5.2*n_porcion_fruta5.2)/100
grasas_alimento_dieta_fruta5.3<- frutas[alimento_dieta_fruta5.3, "Grasas"]
n_grasas_alimento_dieta_fruta5.3<- as.numeric(grasas_alimento_dieta_fruta5.3)
n_grasas_totales_fruta5.3<- (n_grasas_alimento_dieta_fruta5.3*n_porcion_fruta5.3)/100
grasas_alimento_dieta_fruta5.4<- frutas[alimento_dieta_fruta5.4, "Grasas"]
n_grasas_alimento_dieta_fruta5.4<- as.numeric(grasas_alimento_dieta_fruta5.4)
n_grasas_totales_fruta5.4<- (n_grasas_alimento_dieta_fruta5.4*n_porcion_fruta5.4)/100
grasas_alimento_dieta_fruta5.5<- frutas[alimento_dieta_fruta5.5, "Grasas"]
n_grasas_alimento_dieta_fruta5.5<- as.numeric(grasas_alimento_dieta_fruta5.5)
n_grasas_totales_fruta5.5<- (n_grasas_alimento_dieta_fruta5.5*n_porcion_fruta5.5)/100
grasas_totales_fruta5<- n_grasas_totales_fruta5.1 + n_grasas_totales_fruta5.2 + n_grasas_totales_fruta5.3 + n_grasas_totales_fruta5.4 + n_grasas_totales_fruta5.5
fruta<- c(kcal_totales_fruta5, proteina_totales_fruta5, carbohidrato_totales_fruta5, grasas_totales_fruta5)
nombres<- c("kcal","proteina","carbohidratos","grasas")
names(fruta)<- nombres
return(print(fruta))}
}
alimento_fruta<- prueba_fruta()
alimento_fruta
#1. Alimentos de origen animal
#Se cargo la tabla de alimentos de origen animal, para esto se uso la funcion "read.table", entre parentesis se coloco entre comillas en nombre del archivo ("Alimentos_de_origen_animal.csv"), header=TRUE ya que de esta manera indicamos que el nombre de las columnas sea la primera fila, sep="," para indicar que se separa por comas  y por ultimo row.names= 1 indica que los nombres de las filas es la primera columna
alimento_origen_animal <-read.table("Alimentos_de_origen_animal.csv", header=TRUE, sep=',', row.names = 1)
alimento_origen_animal
>>>>>>> b6dbcd583515d019ee52fe7bd3ac7ec5694e906e
